{"version":3,"sources":["services/user.ts","services/tweet.ts","services/messages.ts","services/fixtures.ts","services/asyncHttpClient.ts","services/twitterCloneService.ts","app.ts","environment.ts","main.ts","resources/index.ts","viewmodels/adminDashboard/adminDashboard.ts","viewmodels/adminTweets/adminTweets.ts","viewmodels/adminUsers/adminUsers.ts","viewmodels/flashMessage/flashMessage.ts","viewmodels/createTweet/createTweet.ts","viewmodels/followers/followers.ts","viewmodels/following/following.ts","viewmodels/headerMenu/headerMenu.ts","viewmodels/login/login.ts","viewmodels/landing/landing.ts","viewmodels/logout/logout.ts","viewmodels/profile/profile.ts","viewmodels/settings/settings.ts","viewmodels/signup/signup.ts","viewmodels/tweetCard/tweetCard.ts","viewmodels/tweets/tweets.ts","viewmodels/tweetsFollowing/tweetsFollowing.ts","viewmodels/userCard/userCard.ts","/Users/florianfritz/Documents/projects/nodejs/twitter-clone-spa/node_modules/querystring/decode.js","/Users/florianfritz/Documents/projects/nodejs/twitter-clone-spa/node_modules/querystring/encode.js","/Users/florianfritz/Documents/projects/nodejs/twitter-clone-spa/src/app.html","/Users/florianfritz/Documents/projects/nodejs/twitter-clone-spa/src/viewmodels/adminDashboard/adminDashboard.html","/Users/florianfritz/Documents/projects/nodejs/twitter-clone-spa/src/viewmodels/adminUsers/adminUsers.html","/Users/florianfritz/Documents/projects/nodejs/twitter-clone-spa/src/viewmodels/adminTweets/adminTweets.html","/Users/florianfritz/Documents/projects/nodejs/twitter-clone-spa/src/viewmodels/createTweet/createTweet.html","/Users/florianfritz/Documents/projects/nodejs/twitter-clone-spa/src/viewmodels/flashMessage/flashMessage.html","/Users/florianfritz/Documents/projects/nodejs/twitter-clone-spa/src/viewmodels/followers/followers.html","/Users/florianfritz/Documents/projects/nodejs/twitter-clone-spa/src/viewmodels/following/following.html","/Users/florianfritz/Documents/projects/nodejs/twitter-clone-spa/src/viewmodels/footerMenu/footerMenu.html","/Users/florianfritz/Documents/projects/nodejs/twitter-clone-spa/src/viewmodels/formErrors/formErrors.html","/Users/florianfritz/Documents/projects/nodejs/twitter-clone-spa/src/viewmodels/headerMenu/headerMenu.html","/Users/florianfritz/Documents/projects/nodejs/twitter-clone-spa/src/viewmodels/landing/landing.html","/Users/florianfritz/Documents/projects/nodejs/twitter-clone-spa/src/viewmodels/login/login.html","/Users/florianfritz/Documents/projects/nodejs/twitter-clone-spa/src/viewmodels/logout/logout.html","/Users/florianfritz/Documents/projects/nodejs/twitter-clone-spa/src/viewmodels/settings/settings.html","/Users/florianfritz/Documents/projects/nodejs/twitter-clone-spa/src/viewmodels/profile/profile.html","/Users/florianfritz/Documents/projects/nodejs/twitter-clone-spa/src/viewmodels/signup/signup.html","/Users/florianfritz/Documents/projects/nodejs/twitter-clone-spa/src/viewmodels/tweetCard/tweetCard.html","/Users/florianfritz/Documents/projects/nodejs/twitter-clone-spa/src/viewmodels/tweets/tweets.html","/Users/florianfritz/Documents/projects/nodejs/twitter-clone-spa/src/viewmodels/tweetsFollowing/tweetsFollowing.html","/Users/florianfritz/Documents/projects/nodejs/twitter-clone-spa/src/viewmodels/userCard/userCard.html"],"names":[],"mappings":"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3D,KAAI,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,uBAAY,CAAC,eAAe,CAAC,CAAC,UAAU,EAAE,CAAC,CAAC;YAClE,CAAC,CAAC,CAAC;QACL,CAAC;QAED,+BAAY,GAAZ;YAAA,iBAIC;YAHC,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,IAAI,CAAC,UAAC,KAAK;gBAC5D,KAAI,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,uBAAY,CAAC,wBAAwB,CAAC,CAAC,UAAU,EAAE,CAAC,CAAC;YAC3E,CAAC,CAAC,CAAC;QACL,CAAC;QACH,eAAC;IAAD,CAzDA,AAyDC,IAAA;IAzDY,QAAQ;QADpB,8BAAU,EAAE;yCAOS,6BAAmB,EAAK,0CAAe;OANhD,QAAQ,CAyDpB;IAzDY,4BAAQ;;;ACPrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClEA;ACAA;ACAA;ACAA;ACAA;ACAA;ACAA;ACAA;ACAA;ACAA;ACAA;ACAA;ACAA;ACAA;ACAA;ACAA;ACAA;ACAA;ACAA;ACAA;ACAA","file":"app-bundle.js","sourcesContent":["import * as gravatar from \"gravatar\";\nimport * as moment from \"moment\";\n\nexport default class User {\n  id: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n  createdAt: Date;\n  scope: string[];\n  token: string;\n  description: string;\n  followers: any[];\n  following: any[];\n\n  constructor(id:string, firstName:string, lastName:string, email:string, createdAt:Date, description:string = \"\",\n                  scope:string[] = [], following:any[] = [], followers:any[] = [], token:string = \"\") {\n    this.id = id;\n    this.firstName = firstName;\n    this.lastName = lastName;\n    this.email = email;\n    this.scope = scope;\n    this.token = token;\n    this.description = description;\n    this.createdAt = createdAt;\n    this.followers = followers;\n    this.following = following;\n  }\n\n  static fromJson(json) {\n    return new User(json._id || json.id, json.firstName, json.lastName, json.email, json.createdAt,\n                      json.description, json.scope, json.following, json.followers, json.token);\n  }\n\n  get fullName():string {\n    return this.firstName + \" \" + this.lastName;\n  }\n\n  get isAdmin():boolean {\n    for (let role of this.scope) {\n      if (role == \"admin\")\n        return true;\n    }\n\n    return false;\n  }\n\n  canDeleteTweets(other:User) {\n    return this.id == other.id || this.isAdmin;\n  }\n\n  canFollowUser(other:User) {\n    if (this.id == other.id) {\n      return false;\n    }\n    for (let i = 0; i < other.followers.length; i++) {\n      let otherId = other.followers[i].id || other.followers[i];\n      if (otherId == this.id) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  canUnfollowUser(other:User) {\n    if (this.id == other.id) {\n      return false;\n    }\n    for (let i = 0; i < other.followers.length; i++) {\n      let otherId = other.followers[i].id || other.followers[i];\n      if (otherId == this.id) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  get gravatar():string {\n    return gravatar.url(this.email);\n  }\n\n  get bigGravatar():string {\n    return gravatar.url(this.email, { s: '300' });\n  }\n\n  get timeAgo():string {\n    return moment(this.createdAt).fromNow();\n  }\n}\n","import User from \"./user\";\nimport * as moment from \"moment\";\n\nexport default class Tweet {\n  parroting: string[];\n  id: string;\n  message: string;\n  image: string;\n  createdAt: Date;\n  creator: User;\n\n  // Needed to compute virtual properties\n  currentUser: User;\n\n  constructor(id:string, message:string, image:string, parroting:string[], createdAt:Date, creator:User) {\n    this.id = id;\n    this.image = image;\n    this.message = message;\n    this.parroting = parroting;\n    this.createdAt = createdAt;\n    this.creator = creator;\n  }\n\n  static fromJson(json) {\n    return new Tweet(json._id, json.message, json.image, json.parroting, json.createdAt, User.fromJson(json.creator));\n  }\n\n  updateCurrentUser(currentUser: User) {\n    this.currentUser = currentUser;\n  }\n\n  get canUserDeletePost():boolean {\n    if (!this.currentUser) {\n      return false;\n    }\n    if (this.currentUser.id == this.creator.id || this.currentUser.isAdmin) {\n      return true;\n    }\n\n    return false;\n  }\n\n  get hasParrotedTweet():boolean {\n    if (!this.currentUser) {\n      return false;\n    }\n    for(let parrotingId of this.parroting) {\n      if (parrotingId == this.currentUser.id) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  get timeAgo():string {\n    return moment(this.createdAt).fromNow();\n  }\n}\n","import User from \"./user\";\nimport Tweet from \"./tweet\";\n\nexport class LoginStatus {\n  success: boolean;\n  error: string;\n  user: User;\n\n  constructor(success: boolean, error:string, user: User) {\n    this.success = success;\n    this.error = error;\n    this.user = user;\n  }\n}\n\nexport class TweetsChanged {\n  tweets: Tweet[];\n\n  constructor(tweets:Tweet[]) {\n    this.tweets = tweets;\n  }\n}\n\nexport class AdminStatsChanged {\n  stats: any;\n\n  constructor(stats:any) {\n    this.stats = stats;\n  }\n}\n\nexport class UsersChanged {\n  users: User[];\n\n  constructor(users:User[]) {\n    this.users = users;\n  }\n}\n\nexport class FlashMessage {\n  message: string;\n  displayIn: number;\n\n  constructor(message:string, displayIn:number = 1) {\n    this.message = message;\n    this.displayIn = displayIn;\n  }\n\n  displayNow() {\n    this.displayIn = 0;\n    return this;\n  }\n\n  get isDisplayed():boolean {\n    return this.displayIn == 0;\n  }\n}\n\nexport class PageChanged { }\n","export default class Fixtures {\n  baseUrl: string = \"https://true-parrot.herokuapp.com\";\n}\n","import {autoinject} from \"aurelia-framework\";\nimport {HttpClient} from \"aurelia-http-client\";\nimport Fixtures from \"./fixtures\";\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {LoginStatus} from './messages';\nimport User from \"./user\";\nimport {ServiceError} from \"./twitterCloneService\";\n\n@autoinject()\nexport default class AsyncHttpClient {\n  httpClient: HttpClient;\n  ea: EventAggregator;\n\n  constructor(httpClient:HttpClient, ea:EventAggregator, fixtures:Fixtures) {\n    this.httpClient = httpClient;\n    this.httpClient.configure( configuration => {\n      configuration.withBaseUrl(fixtures.baseUrl);\n    });\n    this.ea = ea;\n  }\n\n  getAuthenticatedUser():User {\n    let user:User;\n    const localAuth = localStorage[\"trueParrot\"];\n\n    if (localAuth && localAuth !== 'null') {\n      const userJson = JSON.parse(localAuth);\n      user = User.fromJson(userJson);\n\n      this.httpClient.configure(http => {\n        http.withHeader('Authorization', 'bearer ' + user.token);\n      });\n    }\n\n    return user;\n  }\n\n  authenticate(url:string, user) {\n    return this.httpClient.post(url, user).then(response => {\n      const status = response.content;\n\n      const user = User.fromJson(status.user);\n      user.token = status.token;\n\n      this.setCurrentUser(user);\n      this.ea.publish(new LoginStatus(true, null, user));\n\n      return user;\n    }).catch((error) => {\n      console.log(new ServiceError(error));\n      throw new ServiceError(error);\n    });\n  }\n\n  clearAuthentication() {\n    localStorage[\"trueParrot\"] = null;\n    this.httpClient.configure(configuration => {\n      configuration.withHeader(\"Authorization\", \"\");\n    });\n  }\n\n  setCurrentUser(user:User) {\n    localStorage[\"trueParrot\"] = JSON.stringify(user);\n    this.httpClient.configure(configuration => {\n      configuration.withHeader(\"Authorization\", \"bearer \" + user.token);\n    });\n  }\n\n  get(url:string) {\n    return this.httpClient.get(url);\n  }\n\n  post(url:string, obj) {\n    return this.httpClient.post(url, obj);\n  }\n\n  delete(url:string) {\n    return this.httpClient.delete(url);\n  }\n\n  patch(url:string, obj) {\n    return this.httpClient.patch(url, obj);\n  }\n}\n","import User from \"./user\";\nimport {autoinject} from \"aurelia-framework\";\nimport {EventAggregator} from \"aurelia-event-aggregator\";\nimport {LoginStatus, TweetsChanged, UsersChanged, AdminStatsChanged} from \"./messages\";\nimport AsyncHttpClient from \"./asyncHttpClient\";\nimport Tweet from \"./tweet\";\n\n@autoinject()\nexport default class TwitterCloneService {\n  currentUser: User;\n  ea: EventAggregator;\n  httpClient: AsyncHttpClient;\n\n  tweets: Tweet[];\n  users: User[];\n  adminStats: any;\n  currentProfileTweets: Tweet[];\n\n  constructor(ea:EventAggregator, httpClient:AsyncHttpClient) {\n    this.ea = ea;\n    this.httpClient = httpClient;\n\n    this.currentUser = this.httpClient.getAuthenticatedUser();\n    this.tweets = [];\n    this.users = [];\n    this.currentProfileTweets = [];\n    this.reloadTweets();\n    this.reloadUsers();\n\n    ea.subscribe(LoginStatus, (loginStatus:LoginStatus) => {\n      this.currentUser = loginStatus.user;\n    });\n\n    ea.subscribe(UsersChanged, (message:UsersChanged) => {\n      if (this.isAuthenticated() && this.currentUser.isAdmin) {\n        this.reloadAdminStats();\n      }\n    });\n    ea.subscribe(TweetsChanged, (message:TweetsChanged) => {\n      if (this.isAuthenticated() && this.currentUser.isAdmin) {\n        this.reloadAdminStats();\n      }\n    });\n  }\n\n  isAuthenticated(): boolean {\n    return !!this.currentUser;\n  }\n\n  /**\n   * Logs a user in\n   *\n   * @param email The email of the user to login\n   * @param password The password of the user to login\n   */\n  login(email:string, password:string) {\n    return this.httpClient.authenticate('/api/users/authenticate', { email: email, password: password });\n  }\n\n  /**\n   * Register a new user. All parameters are required.\n   *\n   * @param email\n   * @param password\n   * @param firstName\n   * @param lastName\n   * @param description\n   */\n  register(email:string, password:string, firstName:string, lastName:string, description:string) {\n    const params = {\n      email: email,\n      password: password,\n      firstName: firstName,\n      lastName: lastName,\n      description: description,\n    };\n\n    return this.httpClient.post('/api/users', params).then((result) => {\n      this.login(email, password);\n\n      return true;\n    }).catch((error) => {\n      throw new ServiceError(error);\n    });\n  }\n\n  /**\n   * Logs the local user out.\n   */\n  logout() {\n    this.httpClient.clearAuthentication();\n\n    this.currentUser = null;\n    this.ea.publish(new LoginStatus(false, \"logout\", null));\n  }\n\n  /**\n   * Reload the global timeline of tweets from the server.\n   */\n  reloadTweets(onlyFollowing = false) {\n    let url = \"/api/tweets\";\n    if (onlyFollowing) {\n      url = \"/api/following/tweets\";\n    }\n\n    this.httpClient.get(url).then((response) => {\n      if (response.isSuccess) {\n        this.tweets = [];\n        for (let tweetJson of response.content) {\n          const newTweet = Tweet.fromJson(tweetJson);\n          newTweet.updateCurrentUser(this.currentUser);\n\n          this.tweets.push(newTweet);\n        }\n\n        this.ea.publish(new TweetsChanged(this.tweets));\n      }\n    });\n  }\n\n  /**\n   * Reload the global timeline of tweets from the server.\n   */\n  reloadUsers() {\n    this.httpClient.get(\"/api/users\").then((response) => {\n      if (response.isSuccess) {\n        this.users = [];\n        for (let userJson of response.content) {\n          const newUser = User.fromJson(userJson);\n\n          this.users.push(newUser);\n        }\n\n        this.ea.publish(new UsersChanged(this.users));\n      }\n    });\n  }\n\n  /**\n   * Deletes the given tweet (user needs permission to do so).\n   *\n   * @param tweet The tweet to be deleted\n   */\n  deleteTweet(tweet:Tweet) {\n    this.httpClient.delete(\"/api/tweets/\" + tweet.id).then((result) => {\n      if (result.isSuccess) {\n        this.tweets.forEach((existingTweet, index) => {\n          if (existingTweet.id == tweet.id) {\n            this.tweets.splice(index, 1);\n          }\n        });\n        this.currentProfileTweets.forEach((existingTweet, index) => {\n          if (existingTweet.id == tweet.id) {\n            this.currentProfileTweets.splice(index, 1);\n          }\n        });\n\n        this.ea.publish(new TweetsChanged(this.tweets));\n      }\n    });\n  }\n\n  deleteTweetsByUser(userId) {\n    return this.httpClient.delete(\"/api/users/\" + userId + \"/tweets\").then((result) => {\n      this.tweets = this.tweets.filter(existingTweet => existingTweet.creator.id != userId );\n      this.currentProfileTweets =\n        this.currentProfileTweets.filter(existingTweet => existingTweet.creator.id != userId );\n\n      this.ea.publish(new TweetsChanged(this.tweets));\n\n      return result.content.message;\n    });\n  }\n\n  /**\n   * Sets the 'parroting' status of an tweet for the current user.\n   *\n   * @param tweet The tweet to be parroted/un parroted\n   * @param parroting Boolean indicating the desired parroting state\n   */\n  parrotTweet(tweet:Tweet, parroting:boolean) {\n    this.httpClient.patch(\"/api/tweets/\" + tweet.id + \"/parrot\", { parroting: parroting }).then((result) => {\n      if (result.isSuccess) {\n        this.tweets.forEach((existingTweet) => {\n          if (existingTweet.id == tweet.id) {\n            existingTweet.parroting = result.content.parroting;\n          }\n        });\n        tweet.parroting = result.content.parroting;\n\n        this.ea.publish(new TweetsChanged(this.tweets));\n      }\n    }).catch((error) => {\n      console.log(error);\n    });\n  }\n\n  /**\n   * Updates the settings of the current user.\n   *\n   * @param email The new email address\n   * @param firstName The new firstName\n   * @param lastName The new lastName\n   * @param description The new description\n   * @param password optional: The new password, if not provided the password stays unchanged\n   */\n  updateSettings(email:string, firstName:string, lastName:string, description:string, password:string = \"\") {\n    const settings = {\n      email: email,\n      firstName: firstName,\n      lastName: lastName,\n      description: description,\n    };\n\n    if (password.length > 0) {\n      settings[\"password\"] = password;\n    }\n\n    return this.httpClient.patch(\"/api/users/\" + this.currentUser.id, settings).then((result) => {\n      if (result.isSuccess) {\n        this.currentUser.firstName = result.content.firstName;\n        this.currentUser.lastName = result.content.lastName;\n        this.currentUser.description = result.content.description;\n        this.currentUser.email = result.content.email;\n      }\n\n      this.httpClient.setCurrentUser(this.currentUser);\n      return this.currentUser;\n    }).catch((error) => {\n      throw new ServiceError(error);\n    });\n  }\n\n  /**\n   * Queries the server for a users profile with the tweets loaded.\n   * Returns the result as a promise.\n   *\n   * @param userId\n   * @returns Promise with the requested profile as a result\n   */\n  getTweetsByUser(userId) {\n    const userUrl = \"/api/users/\" + userId;\n\n    return this.httpClient.get(userUrl + \"/tweets\").then((result) => {\n      const tweets = [];\n\n      for (let tweetJson of result.content) {\n        const newTweet = Tweet.fromJson(tweetJson);\n        newTweet.updateCurrentUser(this.currentUser);\n        tweets.push(newTweet);\n      }\n\n      this.currentProfileTweets = tweets;\n\n      return tweets;\n    });\n  }\n\n  /**\n   * Queries the server for a user.\n   *\n   * @param userId\n   * @returns Promise with the requested user.\n   */\n  getUser(userId) {\n    const userUrl = \"/api/users/\" + userId;\n\n    return this.httpClient.get(userUrl).then((result) => {\n      return User.fromJson(result.content);\n    });\n  }\n\n  /**\n   * Deletes the user with the given id\n   * @param userId The id of the user to be deleted\n   * @returns {Promise<User[]>} A promise holding the new, changed user list\n   */\n  deleteUser(userId) {\n    const userUrl = \"/api/users/\" + userId;\n\n    return this.httpClient.delete(userUrl).then((result) => {\n      this.users.forEach((existingUser, index) => {\n        if (existingUser.id == userId) {\n          this.users.splice(index, 1);\n        }\n\n        this.ea.publish(new UsersChanged(this.users));\n      });\n\n      return this.users;\n    });\n  }\n\n  /**\n   * Follow or unfollow a given user.\n   *\n   * @param userId the user to follow/unfollow\n   * @param following wether to follow or unfollow the user\n   * @returns {any} A promise with the updated user list\n   */\n  updateFollowUser(userId, following) {\n    const followUrl = \"/api/users/\" + userId + \"/follow\";\n\n    return this.httpClient.patch(followUrl, { following: following }).then((result) => {\n      return this.reloadUsers();\n    }).catch((error) => {\n      return new ServiceError(error);\n    });\n  }\n\n  /**\n   * Creates a new tweet for the current user.\n   *\n   * @param message The message to tweet\n   * @param image An form image to upload with the tweet\n   */\n  createTweet(message:string, image = null) {\n    const form = new FormData();\n    form.append('json', JSON.stringify({ message: message }));\n    if (image) {\n      form.append('image', image);\n    }\n\n    return this.httpClient.post(\"/api/tweets\", form).then((result) => {\n       const newTweet = Tweet.fromJson(result.content);\n\n      this.tweets.unshift(newTweet);\n      this.ea.publish(new TweetsChanged(this.tweets));\n\n      return newTweet;\n    }).catch((error) => {\n      throw new ServiceError(error);\n    });\n  }\n\n  /**\n   * Batch delete tweets using the admin interface\n   *\n   * @param tweetIds The tweet ids to delete\n   */\n  adminDeleteTweets(tweetIds:string[]) {\n    return this.httpClient.post(\"/api/admin/tweets/batchDelete\", tweetIds).then((result) => {\n      this.reloadTweets();\n\n      return result.content.message;\n    }).catch((error) => {\n      throw new ServiceError(error);\n    });\n  }\n\n  /**\n   * Batch delete users using the admin interface\n   *\n   * @param userIds The tweet ids to delete\n   */\n  adminDeleteUsers(userIds:string[]) {\n    return this.httpClient.post(\"/api/admin/users/batchDelete\", userIds).then((result) => {\n      this.reloadUsers();\n\n      return result.content.message;\n    }).catch((error) => {\n      throw new ServiceError(error);\n    });\n  }\n\n  reloadAdminStats() {\n    return this.httpClient.get(\"/api/admin/stats\").then((result) => {\n      this.adminStats = result.content;\n      this.ea.publish(new AdminStatsChanged(this.adminStats));\n\n      return result.content;\n    }).catch((error) => {\n      throw new ServiceError(error);\n    });\n  }\n}\n\nexport class ServiceError extends Error {\n  formErrors;\n  message:string;\n\n  constructor(error) {\n    const response = JSON.parse(error.response);\n    super(response.error);\n\n    this.message = response.error || response.message;\n    this.formErrors = response.validation_errors || [{ message: this.message }];\n  }\n}\n","import {autoinject} from \"aurelia-framework\";\nimport {Router, Redirect} from \"aurelia-router\";\nimport TwitterCloneService from \"./services/twitterCloneService\";\nimport {EventAggregator} from \"aurelia-event-aggregator\";\nimport {LoginStatus, PageChanged, FlashMessage} from \"./services/messages\";\n\n@autoinject()\nexport class App {\n  router: Router;\n  service: TwitterCloneService;\n  ea: EventAggregator;\n\n  constructor(service:TwitterCloneService, ea:EventAggregator) {\n    this.service = service;\n    this.ea = ea;\n\n    this.ea.subscribe(LoginStatus, (loginStatus:LoginStatus) => {\n      if (loginStatus.success) {\n        this.router.navigateToRoute(\"tweets\");\n      } else {\n        this.router.navigateToRoute(\"landing\");\n      }\n    });\n  }\n\n  configureRouter(config, router:Router) {\n    const authStep = new AuthorizeStep(this.service, this.ea);\n    config.addAuthorizeStep(authStep);\n    const flashStep = new ClearFlashStep(this.ea);\n    config.addPreActivateStep(flashStep);\n\n    config.map([\n      {\n        route: \"logout\",\n        name: \"logout\",\n        moduleId: \"viewmodels/logout/logout\",\n        nav: true,\n        title: \"Logout\",\n      },\n      {\n        route: \"login\",\n        name: \"login\",\n        moduleId: \"viewmodels/login/login\",\n        nav: true,\n        title: \"Login\",\n      },\n      {\n        route: \"signup\",\n        name: \"signup\",\n        moduleId: \"viewmodels/signup/signup\",\n        nav: true,\n        title: \"Signup\",\n      },\n      {\n        route: \"\",\n        name: \"landing\",\n        moduleId: \"viewmodels/landing/landing\",\n        nav: true,\n        title: \"Welcome\",\n      },\n      {\n        route: \"tweets\",\n        name: \"tweets\",\n        moduleId: \"viewmodels/tweets/tweets\",\n        nav: true,\n        title: \"Tweets\",\n      },\n      {\n        route: \"personalFeed\",\n        name: \"personalFeed\",\n        moduleId: \"viewmodels/tweetsFollowing/tweetsFollowing\",\n        nav: true,\n        title: \"Personal Timeline\",\n      },\n      {\n        route: \"settings\",\n        name: \"settings\",\n        moduleId: \"viewmodels/settings/settings\",\n        nav: true,\n        settings: { auth: true },\n        title: \"Settings\",\n      },\n      {\n        route: \"profile/:id\",\n        href: \"profile/:id\",\n        name: \"profile\",\n        moduleId: \"viewmodels/profile/profile\",\n        nav: true,\n        title: \"Profile\",\n      },\n      {\n        route: \"profile/:id/followers\",\n        href: \"profile/:id/followers\",\n        name: \"followers\",\n        moduleId: \"viewmodels/followers/followers\",\n        nav: true,\n        title: \"Followers\",\n      },\n      {\n        route: \"profile/:id/following\",\n        href: \"profile/:id/following\",\n        name: \"following\",\n        moduleId: \"viewmodels/following/following\",\n        nav: true,\n        title: \"Following\",\n      },\n      {\n        route: \"tweet\",\n        name: \"tweet\",\n        moduleId: \"viewmodels/createTweet/createTweet\",\n        nav: true,\n        settings: { auth: true },\n        title: \"Tweet\",\n      },\n      {\n        route: \"admin/dashboard\",\n        name: \"adminDashboard\",\n        moduleId: \"viewmodels/adminDashboard/adminDashboard\",\n        nav: true,\n        settings: { auth: true, admin: true},\n        title: \"Admin Dashboard\"\n      },\n      {\n        route: \"admin/tweets\",\n        name: \"adminTweets\",\n        moduleId: \"viewmodels/adminTweets/adminTweets\",\n        nav: true,\n        settings: { auth: true, admin: true},\n        title: \"Administrate Tweets\"\n      },\n      {\n        route: \"admin/users\",\n        name: \"adminUsers\",\n        moduleId: \"viewmodels/adminUsers/adminUsers\",\n        nav: true,\n        settings: { auth: true, admin: true},\n        title: \"Administrate Users\"\n      },\n    ]);\n\n    this.router = router;\n  }\n}\n\n/**\n * The authorize step will check if a creator should be allowed to access an route.\n * If not the creator will be redirected to a correct route.\n */\nclass AuthorizeStep {\n  service: TwitterCloneService;\n  ea: EventAggregator;\n\n  constructor(service:TwitterCloneService, ea:EventAggregator) {\n    this.service = service;\n    this.ea = ea;\n  }\n\n  run(navigationInstruction, next) {\n    const isLoggedIn = this.service.isAuthenticated();\n    const isAdmin = isLoggedIn && this.service.currentUser.isAdmin;\n\n    if (navigationInstruction.getAllInstructions().some(i => i.config.settings.auth)) {\n      if (!isLoggedIn) {\n        this.ea.publish(new FlashMessage(\"Please log in to view this page.\"));\n        return next.cancel(new Redirect(\"login\"));\n      }\n    }\n    if (navigationInstruction.getAllInstructions().some(i => i.config.settings.admin)) {\n      if (!isAdmin) {\n        this.ea.publish(new FlashMessage(\"Insufficient permission to view the page.\"));\n        return next.cancel(new Redirect(\"tweets\"));\n      }\n    }\n\n    return next();\n  }\n}\n\nclass ClearFlashStep {\n  ea: EventAggregator;\n\n  constructor(ea:EventAggregator) {\n    this.ea = ea;\n  }\n\n  run(navigationInstruction, next) {\n    this.ea.publish(new PageChanged());\n\n    return next();\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\n(<any>Promise).config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n","import Tweet from \"../../services/tweet\";\nimport {autoinject} from \"aurelia-framework\";\nimport TwitterCloneService from \"../../services/twitterCloneService\";\nimport {EventAggregator} from \"aurelia-event-aggregator\";\nimport {TweetsChanged, UsersChanged, AdminStatsChanged} from \"../../services/messages\";\nimport User from \"../../services/user\";\n\n@autoinject()\nexport class AdminDashboard {\n  service: TwitterCloneService;\n  tweets: Tweet[];\n  users: User[];\n  currentUser: User;\n  stats: any;\n\n  constructor(service:TwitterCloneService, ea:EventAggregator) {\n    this.service = service;\n    this.currentUser = service.currentUser;\n\n    ea.subscribe(TweetsChanged, (message:TweetsChanged) => {\n      this.setTweets(message.tweets);\n    });\n    this.tweets = this.service.tweets;\n    this.service.reloadTweets();\n\n    ea.subscribe(UsersChanged, (message:UsersChanged) => {\n      this.setUsers(message.users);\n    });\n    this.users = this.service.users;\n    this.service.reloadUsers();\n\n    ea.subscribe(AdminStatsChanged, (message:AdminStatsChanged) => {\n      this.stats = message.stats;\n    });\n    this.stats = this.service.adminStats;\n    this.service.reloadAdminStats();\n  }\n\n  setTweets(tweets:Tweet[]) {\n    this.tweets = tweets.slice(0, 5);\n  }\n\n  setUsers(users:User[]) {\n    this.users = users.slice(0, 5);\n  }\n\n  attached() {\n    this.setTweets(this.service.tweets);\n    this.setUsers(this.service.users);\n    this.stats = this.service.adminStats;\n\n    runJquery();\n  }\n\n}\n","import Tweet from \"../../services/tweet\";\nimport {autoinject} from \"aurelia-framework\";\nimport TwitterCloneService from \"../../services/twitterCloneService\";\nimport {EventAggregator} from \"aurelia-event-aggregator\";\nimport {TweetsChanged, UsersChanged, FlashMessage} from \"../../services/messages\";\nimport User from \"../../services/user\";\n\n@autoinject()\nexport class AdminTweets {\n  service: TwitterCloneService;\n  ea: EventAggregator;\n  tweets: Tweet[];\n  currentUser: User;\n\n  selectedTweets: any[] = [];\n\n  constructor(service:TwitterCloneService, ea:EventAggregator) {\n    this.service = service;\n    this.ea = ea;\n    this.currentUser = service.currentUser;\n\n    ea.subscribe(TweetsChanged, (message:TweetsChanged) => {\n      this.tweets = message.tweets;\n    });\n    this.tweets = this.service.tweets;\n    this.service.reloadTweets();\n  }\n\n  attached() {\n    this.tweets = this.service.tweets;\n\n    runJquery();\n  }\n\n  deleteSelected() {\n    this.service.adminDeleteTweets(this.selectedTweets).then((message) => {\n      this.ea.publish(new FlashMessage(message).displayNow());\n    });\n  }\n\n}\n","import {autoinject} from \"aurelia-framework\";\nimport TwitterCloneService from \"../../services/twitterCloneService\";\nimport {EventAggregator} from \"aurelia-event-aggregator\";\nimport {UsersChanged, FlashMessage} from \"../../services/messages\";\nimport User from \"../../services/user\";\n\n@autoinject()\nexport class AdminUsers {\n  service: TwitterCloneService;\n  ea: EventAggregator;\n  users: User[];\n  currentUser: User;\n\n  selectedUsers: any[] = [];\n\n  constructor(service:TwitterCloneService, ea:EventAggregator) {\n    this.service = service;\n    this.ea = ea;\n    this.currentUser = service.currentUser;\n\n    ea.subscribe(UsersChanged, (message:UsersChanged) => {\n      this.users = message.users;\n    });\n    this.users = this.service.users;\n    this.service.reloadTweets();\n  }\n\n  attached() {\n    this.users = this.service.users;\n\n    runJquery();\n  }\n\n  deleteSelected() {\n    this.service.adminDeleteUsers(this.selectedUsers).then((message) => {\n      this.ea.publish(new FlashMessage(message).displayNow());\n    });\n  }\n\n}\n","import {autoinject} from \"aurelia-framework\";\nimport {Router} from \"aurelia-router\";\nimport {EventAggregator} from \"aurelia-event-aggregator\";\nimport {FlashMessage, PageChanged} from \"../../services/messages\";\n\n@autoinject()\nexport class HeaderMessage {\n  maxFlashMessages = 2;\n  router: Router;\n  messages: FlashMessage[];\n\n  constructor(router:Router, ea:EventAggregator) {\n    this.router = router;\n    this.messages = [];\n\n    ea.subscribe(FlashMessage, (message:FlashMessage) => {\n      this.messages.unshift(message);\n\n      // Delete too many, distracting messages\n      if (this.messages.length > this.maxFlashMessages) {\n        this.messages.pop();\n      }\n    });\n\n    // Display current messages, delete old ones\n    ea.subscribe(PageChanged, (unused:PageChanged) => {\n      this.displayNextMessages();\n    });\n  }\n\n  /**\n   * 'shifts' the messages to display the messages with the next 'displayIn' values.\n   */\n  displayNextMessages() {\n    this.messages.forEach((message) => {\n      message.displayIn--;\n    });\n\n    this.messages = this.messages.filter((message) => {\n      return message.displayIn >= 0;\n    });\n  }\n\n}\n","import {autoinject} from \"aurelia-framework\";\nimport {Router} from \"aurelia-router\";\nimport TwitterCloneService from \"../../services/twitterCloneService\";\nimport {ServiceError} from \"../../services/twitterCloneService\";\nimport Tweet from \"../../services/tweet\";\nimport {EventAggregator} from \"aurelia-event-aggregator\";\nimport {FlashMessage} from \"../../services/messages\";\n\n@autoinject()\nexport class Login {\n  service: TwitterCloneService;\n  message: string;\n  files: string;\n  router: Router;\n  formErrors: any[];\n  ea: EventAggregator;\n  loading: boolean = false;\n\n  constructor(service:TwitterCloneService, router:Router, ea:EventAggregator) {\n    this.service = service;\n    this.router = router;\n    this.ea = ea;\n    this.formErrors = [];\n  }\n\n  tweet() {\n    this.loading = true;\n\n    let image = null;\n    if (this.files) {\n      image = this.files[0];\n    }\n\n    this.service.createTweet(this.message, image).then((result:Tweet) => {\n      this.ea.publish(new FlashMessage(\"Tweet Created\"));\n      this.router.navigateToRoute('tweets');\n\n      this.loading = false;\n    }).catch((error:ServiceError) => {\n      this.formErrors = error.formErrors;\n\n      this.loading = false;\n    });\n  }\n\n  attached() {\n    runJquery();\n  }\n}\n","import {autoinject} from \"aurelia-framework\";\nimport TwitterCloneService from \"../../services/twitterCloneService\";\nimport Tweet from \"../../services/tweet\";\nimport User from \"../../services/user\";\nimport {EventAggregator} from \"aurelia-event-aggregator\";\nimport {TweetsChanged, UsersChanged} from \"../../services/messages\";\n\n@autoinject()\nexport class Followers {\n  service: TwitterCloneService;\n  userId: string;\n  user: User;\n\n  constructor(service:TwitterCloneService, ea:EventAggregator) {\n    this.service = service;\n\n    ea.subscribe(UsersChanged, (message:UsersChanged) => {\n      if (this.user) {\n        this.updateUser(this.user.id);\n      }\n    });\n  }\n\n  updateUser(id) {\n    this.service.getUser(id).then((user:User) => {\n      this.user = user;\n    });\n  }\n\n  activate(params) {\n    this.updateUser(params.id);\n    this.userId = params.id;\n  }\n\n  attached() {\n    runJquery();\n  }\n}\n","import {autoinject} from \"aurelia-framework\";\nimport TwitterCloneService from \"../../services/twitterCloneService\";\nimport Tweet from \"../../services/tweet\";\nimport User from \"../../services/user\";\nimport {EventAggregator} from \"aurelia-event-aggregator\";\nimport {TweetsChanged, UsersChanged} from \"../../services/messages\";\n\n@autoinject()\nexport class Following {\n  service: TwitterCloneService;\n  userId: string;\n  user: User;\n\n  constructor(service:TwitterCloneService, ea:EventAggregator) {\n    this.service = service;\n\n    ea.subscribe(UsersChanged, (message:UsersChanged) => {\n      if (this.user) {\n        this.updateUser(this.user.id);\n      }\n    });\n  }\n\n  updateUser(id) {\n    this.service.getUser(id).then((user:User) => {\n      this.user = user;\n    });\n  }\n\n  activate(params) {\n    this.updateUser(params.id);\n    this.userId = params.id;\n  }\n\n  attached() {\n    runJquery();\n  }\n}\n","import {autoinject} from \"aurelia-framework\";\nimport {EventAggregator} from \"aurelia-event-aggregator\";\nimport {LoginStatus} from \"../../services/messages\";\nimport TwitterCloneService from \"../../services/twitterCloneService\";\nimport User from \"../../services/user\";\n\n@autoinject()\nexport class HeaderMenu {\n  service: TwitterCloneService;\n  ea: EventAggregator;\n\n  loggedIn: boolean;\n  currentUser: User;\n\n  constructor(service:TwitterCloneService, ea:EventAggregator) {\n    this.service = service;\n    this.ea = ea;\n\n    ea.subscribe(LoginStatus, (loginStatus:LoginStatus) => {\n      this.currentUser = loginStatus.user;\n      this.loggedIn = loginStatus.success;\n    });\n  }\n\n  attached() {\n    this.currentUser = this.service.currentUser;\n    this.loggedIn = this.service.isAuthenticated();\n\n    runJquery();\n  }\n}\n","import {autoinject} from \"aurelia-framework\";\nimport TwitterCloneService from \"../../services/twitterCloneService\";\nimport {ServiceError} from \"../../services/twitterCloneService\";\nimport User from \"../../services/user\";\nimport {FlashMessage} from \"../../services/messages\";\nimport {EventAggregator} from \"aurelia-event-aggregator\";\n\n@autoinject()\nexport class Login {\n  service: TwitterCloneService;\n  ea: EventAggregator;\n  email: string;\n  password: string;\n\n  formErrors: any[];\n\n  constructor(service:TwitterCloneService, ea:EventAggregator) {\n    this.service = service;\n    this.ea = ea;\n  }\n\n  login(event) {\n    this.service.login(this.email, this.password).then((user:User) => {\n      this.ea.publish(new FlashMessage(\"Logged In\"));\n    }).catch((error:ServiceError) => {\n      this.formErrors = error.formErrors;\n    });\n  }\n\n  attached() {\n    runJquery();\n  }\n}\n","export class Landing {\n  attached() {\n    runJquery();\n  }\n}\n","import {autoinject} from \"aurelia-framework\";\nimport TwitterCloneService from \"../../services/twitterCloneService\";\nimport {FlashMessage} from \"../../services/messages\";\nimport {EventAggregator} from \"aurelia-event-aggregator\";\n\n@autoinject()\nexport class Logout {\n  service: TwitterCloneService;\n  ea: EventAggregator;\n\n  constructor(service:TwitterCloneService, ea:EventAggregator) {\n    this.service = service;\n    this.ea = ea;\n  }\n\n  logout() {\n    this.ea.publish(new FlashMessage(\"Logged Out\"));\n    this.service.logout();\n  }\n\n  attached() {\n    runJquery();\n  }\n}\n","import {autoinject} from \"aurelia-framework\";\nimport TwitterCloneService from \"../../services/twitterCloneService\";\nimport Tweet from \"../../services/tweet\";\nimport User from \"../../services/user\";\nimport {EventAggregator} from \"aurelia-event-aggregator\";\nimport {TweetsChanged} from \"../../services/messages\";\n\n@autoinject()\nexport class Profile {\n  service: TwitterCloneService;\n  tweets: Tweet[];\n  userId: string;\n\n  constructor(service:TwitterCloneService, ea:EventAggregator) {\n    this.service = service;\n\n    ea.subscribe(TweetsChanged, (message:TweetsChanged) => {\n      this.tweets = this.service.currentProfileTweets;\n    });\n  }\n\n  activate(params) {\n    this.service.getTweetsByUser(params.id).then((serviceTweets:Tweet[]) => {\n      this.tweets = serviceTweets;\n    });\n\n    this.userId = params.id;\n  }\n\n  attached() {\n    runJquery();\n  }\n}\n","import {autoinject} from \"aurelia-framework\";\nimport TwitterCloneService from \"../../services/twitterCloneService\";\nimport User from \"../../services/user\";\nimport {ServiceError} from \"../../services/twitterCloneService\";\nimport {FlashMessage} from \"../../services/messages\";\nimport {EventAggregator} from \"aurelia-event-aggregator\";\n\n@autoinject()\nexport class Settings {\n  service: TwitterCloneService;\n  currentUser: User;\n  ea:EventAggregator;\n\n  email: string;\n  firstName: string;\n  lastName: string;\n  password: string;\n  description: string;\n\n  formErrors: any[];\n\n  constructor(service:TwitterCloneService, ea:EventAggregator) {\n    this.service = service;\n    this.ea = ea;\n  }\n\n  updateCurrentUser(user:User) {\n    this.currentUser = user;\n\n    this.email = this.currentUser.email;\n    this.firstName = this.currentUser.firstName;\n    this.lastName = this.currentUser.lastName;\n    this.description = this.currentUser.description;\n  }\n\n  attached() {\n    this.updateCurrentUser(this.service.currentUser);\n\n    runJquery();\n  }\n\n  saveSettings() {\n    this.service.updateSettings(this.email, this.firstName, this.lastName, this.description, this.password)\n      .then((user) => {\n        this.ea.publish(new FlashMessage(\"Settings Saved\").displayNow());\n      }).catch((error:ServiceError) => {\n        this.formErrors = error.formErrors;\n      });\n  }\n}\n","import {autoinject} from \"aurelia-framework\";\nimport TwitterCloneService from \"../../services/twitterCloneService\";\nimport {ServiceError} from \"../../services/twitterCloneService\";\nimport {FlashMessage} from \"../../services/messages\";\nimport {EventAggregator} from \"aurelia-event-aggregator\";\n\n@autoinject()\nexport class Signup {\n  service: TwitterCloneService;\n  ea: EventAggregator;\n  email: string;\n  password: string;\n  firstName: string;\n  lastName: string;\n  description: string;\n\n  formErrors: any[] = [];\n\n  constructor(service:TwitterCloneService, ea:EventAggregator) {\n    this.service = service;\n    this.ea = ea;\n  }\n\n  register(event) {\n    this.service.register(this.email, this.password, this.firstName, this.lastName, this.description).then((result) => {\n      this.ea.publish(new FlashMessage(\"Account Created\"));\n    }).catch((error:ServiceError) => {\n      this.formErrors = error.formErrors;\n    });\n  }\n\n  attached() {\n    runJquery();\n  }\n}\n","import User from \"../../services/user\";\nimport Tweet from \"../../services/tweet\";\nimport {autoinject} from \"aurelia-framework\";\nimport TwitterCloneService from \"../../services/twitterCloneService\";\nimport {Router} from \"aurelia-router\";\nimport {FlashMessage} from \"../../services/messages\";\nimport {EventAggregator} from \"aurelia-event-aggregator\";\n\n@autoinject()\nexport class TweetCard {\n  currentUser: User;\n  tweet: Tweet;\n  service: TwitterCloneService;\n  router: Router;\n  ea: EventAggregator;\n\n  constructor(service:TwitterCloneService, router:Router, ea:EventAggregator) {\n    this.service = service;\n    this.router = router;\n    this.ea = ea;\n  }\n\n  activate(model) {\n    this.currentUser = model.currentUser;\n    this.tweet = model.tweet;\n  }\n\n  delete() {\n    this.ea.publish(new FlashMessage(\"Tweet Deleted\").displayNow());\n    this.service.deleteTweet(this.tweet);\n  }\n\n  parrot() {\n    if (this.service.isAuthenticated()) {\n      this.ea.publish(new FlashMessage(\"Tweet Parroted\").displayNow());\n      this.service.parrotTweet(this.tweet, true);\n    } else {\n      this.router.navigateToRoute('login');\n    }\n  }\n\n  unParrot() {\n    if (this.service.isAuthenticated()) {\n      this.ea.publish(new FlashMessage(\"Tweet Un-Parroted\").displayNow());\n      this.service.parrotTweet(this.tweet, false);\n    } else {\n      this.router.navigateToRoute('login');\n    }\n  }\n}\n","import {autoinject} from \"aurelia-framework\";\nimport TwitterCloneService from \"../../services/twitterCloneService\";\nimport {EventAggregator} from \"aurelia-event-aggregator\";\nimport Tweet from \"../../services/tweet\";\nimport User from \"../../services/user\";\nimport {TweetsChanged} from \"../../services/messages\";\n\n@autoinject()\nexport class Tweets {\n  service: TwitterCloneService;\n  tweets: Tweet[];\n  currentUser: User;\n\n  constructor(service:TwitterCloneService, ea:EventAggregator) {\n    this.service = service;\n\n    ea.subscribe(TweetsChanged, (message:TweetsChanged) => {\n      this.tweets = message.tweets;\n    });\n    this.tweets = service.tweets;\n    this.service.reloadTweets();\n\n    this.currentUser = this.service.currentUser;\n  }\n\n  attached() {\n    this.currentUser = this.service.currentUser;\n\n    runJquery();\n  }\n}\n","import {autoinject} from \"aurelia-framework\";\nimport TwitterCloneService from \"../../services/twitterCloneService\";\nimport {EventAggregator} from \"aurelia-event-aggregator\";\nimport Tweet from \"../../services/tweet\";\nimport User from \"../../services/user\";\nimport {TweetsChanged} from \"../../services/messages\";\n\n@autoinject()\nexport class TweetsFollowing {\n  service: TwitterCloneService;\n  tweets: Tweet[];\n  currentUser: User;\n\n  constructor(service:TwitterCloneService, ea:EventAggregator) {\n    this.service = service;\n\n    ea.subscribe(TweetsChanged, (message:TweetsChanged) => {\n      this.tweets = message.tweets;\n    });\n    this.tweets = service.tweets;\n    this.service.reloadTweets(true);\n\n    this.currentUser = this.service.currentUser;\n  }\n\n  attached() {\n    this.currentUser = this.service.currentUser;\n\n    runJquery();\n  }\n}\n","import {autoinject} from \"aurelia-framework\";\nimport TwitterCloneService from \"../../services/twitterCloneService\";\nimport User from \"../../services/user\";\nimport {EventAggregator} from \"aurelia-event-aggregator\";\nimport {FlashMessage, UsersChanged} from \"../../services/messages\";\n\n@autoinject()\nexport class UserCard {\n  service: TwitterCloneService;\n  user: User;\n  currentUser: User;\n  ea: EventAggregator;\n\n  constructor(service:TwitterCloneService, ea:EventAggregator) {\n    this.service = service;\n    this.ea = ea;\n\n    ea.subscribe(UsersChanged, (message:UsersChanged) => {\n      this.reloadUserInfo(this.user.id);\n    });\n  }\n\n  reloadUserInfo(id) {\n    this.service.getUser(id).then((user) => {\n      this.user = user;\n      this.currentUser = this.service.currentUser;\n    });\n  }\n\n  activate(model) {\n    this.user = model.user;\n\n    if (model.userId) {\n      this.reloadUserInfo(model.userId);\n    }\n  }\n\n  attached() {\n    runJquery();\n  }\n\n  deleteUser() {\n    this.service.deleteUser(this.user.id).then((users:User[]) => {\n      this.ea.publish(new FlashMessage(\"User Deleted\").displayNow());\n    });\n  }\n\n  deleteUserTweets() {\n    this.service.deleteTweetsByUser(this.user.id).then((message:string) => {\n      this.ea.publish(new FlashMessage(message).displayNow());\n    });\n  }\n\n  followUser() {\n    this.service.updateFollowUser(this.user.id, true).then((users) => {\n      this.ea.publish(new FlashMessage(\"Followed User\").displayNow());\n    });\n  }\n\n  unfollowUser() {\n    this.service.updateFollowUser(this.user.id, false).then((users) => {\n      this.ea.publish(new FlashMessage(\"Stopped following User\").displayNow());\n    });\n  }\n}\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"sourceRoot":"../src"}